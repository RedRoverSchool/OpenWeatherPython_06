{"uid":"b3039844c036f46f","name":"test_get_single_user_schemas","fullName":"api_testing.tests.test_http_handler.Tests#test_get_single_user_schemas","historyId":"81f57795c820e67e4df893f39d24a37a","time":{"start":1688605451272,"stop":1688605451387,"duration":115},"status":"broken","statusMessage":"Exception: Invalid JSON response","statusTrace":"self = <api_testing.tests.test_http_handler.Tests object at 0x7f3d647e64a0>\n\n    def test_get_single_user_schemas(self):\n>       get_single_user = HTTPHandler.get(SINGLE_USER, 'single_user.json')\n\napi_testing/tests/test_http_handler.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/utils/http_handler.py:27: in get\n    cls.validate_response(response, absolute_schemas_path_and_name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\nschemas = '/home/runner/work/OpenWeatherPython_06/utils/schemas/single_user.json'\n\n    @staticmethod\n    def validate_response(response, schemas):\n        try:\n            response_json = response.json()\n            is_valid = validator(response_json, schemas)\n            if not is_valid:\n>               raise Exception(\"Invalid JSON response\")\nE               Exception: Invalid JSON response\n\napi_testing/utils/http_handler.py:16: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"Exception: Invalid JSON response","statusTrace":"self = <api_testing.tests.test_http_handler.Tests object at 0x7f3d647e64a0>\n\n    def test_get_single_user_schemas(self):\n>       get_single_user = HTTPHandler.get(SINGLE_USER, 'single_user.json')\n\napi_testing/tests/test_http_handler.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/utils/http_handler.py:27: in get\n    cls.validate_response(response, absolute_schemas_path_and_name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\nschemas = '/home/runner/work/OpenWeatherPython_06/utils/schemas/single_user.json'\n\n    @staticmethod\n    def validate_response(response, schemas):\n        try:\n            response_json = response.json()\n            is_valid = validator(response_json, schemas)\n            if not is_valid:\n>               raise Exception(\"Invalid JSON response\")\nE               Exception: Invalid JSON response\n\napi_testing/utils/http_handler.py:16: Exception","steps":[],"attachments":[{"uid":"6fb027fdf592ca2d","name":"stdout","source":"6fb027fdf592ca2d.txt","type":"text/plain","size":96}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"api_testing.tests"},{"name":"suite","value":"test_http_handler"},{"name":"subSuite","value":"Tests"},{"name":"host","value":"fv-az174-151"},{"name":"thread","value":"2343-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"api_testing.tests.test_http_handler"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":0,"unknown":0,"total":9},"items":[{"uid":"15bfeb06bb809007","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/38//#testresult/15bfeb06bb809007","status":"broken","statusDetails":"Exception: Invalid JSON response","time":{"start":1688519019839,"stop":1688519019968,"duration":129}},{"uid":"6f044006e618abee","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/37//#testresult/6f044006e618abee","status":"broken","statusDetails":"Exception: Invalid JSON response","time":{"start":1688432638069,"stop":1688432638173,"duration":104}},{"uid":"d6a70eafb2f68054","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/36//#testresult/d6a70eafb2f68054","status":"broken","statusDetails":"Exception: Invalid JSON response","time":{"start":1688346210999,"stop":1688346211093,"duration":94}},{"uid":"ddcb0ab2b7bb055","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/35//#testresult/ddcb0ab2b7bb055","status":"broken","statusDetails":"Exception: Invalid JSON response","time":{"start":1688259900924,"stop":1688259901043,"duration":119}},{"uid":"6eef1d1b9d600fb","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/34//#testresult/6eef1d1b9d600fb","status":"broken","statusDetails":"Exception: Invalid JSON response","time":{"start":1688173674954,"stop":1688173675078,"duration":124}},{"uid":"e6687d13063ae614","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/33//#testresult/e6687d13063ae614","status":"broken","statusDetails":"Exception: Invalid JSON response","time":{"start":1688086765966,"stop":1688086766052,"duration":86}},{"uid":"26e761bb85c5f2df","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/32//#testresult/26e761bb85c5f2df","status":"broken","statusDetails":"Exception: Invalid JSON response","time":{"start":1688000482669,"stop":1688000482807,"duration":138}},{"uid":"4eed81dac2e0766e","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/31//#testresult/4eed81dac2e0766e","status":"broken","statusDetails":"Exception: Invalid JSON response","time":{"start":1687914256350,"stop":1687914256460,"duration":110}}]},"tags":[]},"source":"b3039844c036f46f.json","parameterValues":[]}