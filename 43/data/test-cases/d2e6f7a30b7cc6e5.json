{"uid":"d2e6f7a30b7cc6e5","name":"test_tc_002_03_09_ask_a_question","fullName":"tests.test_ask_a_question_pandbox.TestAskQuestionPage#test_tc_002_03_09_ask_a_question","historyId":"3e0f45d107dda88344a8e934f3da82ac","time":{"start":1688951411133,"stop":1688951471511,"duration":60378},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"h4.headline\"}\n  (Session info: headless chrome=114.0.5735.198)\nStacktrace:\n#0 0x55aecc51d4e3 <unknown>\n#1 0x55aecc24cc76 <unknown>\n#2 0x55aecc288c96 <unknown>\n#3 0x55aecc288dc1 <unknown>\n#4 0x55aecc2c27f4 <unknown>\n#5 0x55aecc2a803d <unknown>\n#6 0x55aecc2c030e <unknown>\n#7 0x55aecc2a7de3 <unknown>\n#8 0x55aecc27d2dd <unknown>\n#9 0x55aecc27e34e <unknown>\n#10 0x55aecc4dd3e4 <unknown>\n#11 0x55aecc4e13d7 <unknown>\n#12 0x55aecc4ebb20 <unknown>\n#13 0x55aecc4e2023 <unknown>\n#14 0x55aecc4b01aa <unknown>\n#15 0x55aecc5066b8 <unknown>\n#16 0x55aecc506847 <unknown>\n#17 0x55aecc516243 <unknown>\n#18 0x7fe7bfb9eb43 <unknown>","statusTrace":"self = <test_ask_a_question_pandbox.TestAskQuestionPage object at 0x7f3fce4d5ed0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9de4d1fdc6e7ecf26358b398d44a7725\")>\nopen_and_load_main_page = None\n\n    def test_tc_002_03_09_ask_a_question(self, driver, open_and_load_main_page):\n        ask_a_question_page = AskQuestionPage(driver)\n>       ask_a_question_page.check_header_title(\"ask a question\")\n\ntests/test_ask_a_question_pandbox.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/ask_a_question_page.py:11: in check_header_title\n    displayed_title = self.driver.find_element(*self.ask_a_question_locators.DISPLAYED_TITLE).text\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3fccf5bf10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55aecc506847 \\\\u003Cunknown>\\\\n#17 0x55aecc516243 \\\\u003Cunknown>\\\\n#18 0x7fe7bfb9eb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"h4.headline\"}\nE         (Session info: headless chrome=114.0.5735.198)\nE       Stacktrace:\nE       #0 0x55aecc51d4e3 <unknown>\nE       #1 0x55aecc24cc76 <unknown>\nE       #2 0x55aecc288c96 <unknown>\nE       #3 0x55aecc288dc1 <unknown>\nE       #4 0x55aecc2c27f4 <unknown>\nE       #5 0x55aecc2a803d <unknown>\nE       #6 0x55aecc2c030e <unknown>\nE       #7 0x55aecc2a7de3 <unknown>\nE       #8 0x55aecc27d2dd <unknown>\nE       #9 0x55aecc27e34e <unknown>\nE       #10 0x55aecc4dd3e4 <unknown>\nE       #11 0x55aecc4e13d7 <unknown>\nE       #12 0x55aecc4ebb20 <unknown>\nE       #13 0x55aecc4e2023 <unknown>\nE       #14 0x55aecc4b01aa <unknown>\nE       #15 0x55aecc5066b8 <unknown>\nE       #16 0x55aecc506847 <unknown>\nE       #17 0x55aecc516243 <unknown>\nE       #18 0x7fe7bfb9eb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1688951403219,"stop":1688951403975,"duration":756},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"wait","time":{"start":1688951403975,"stop":1688951403975,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"open_and_load_main_page","time":{"start":1688951403975,"stop":1688951411133,"duration":7158},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"h4.headline\"}\n  (Session info: headless chrome=114.0.5735.198)\nStacktrace:\n#0 0x55aecc51d4e3 <unknown>\n#1 0x55aecc24cc76 <unknown>\n#2 0x55aecc288c96 <unknown>\n#3 0x55aecc288dc1 <unknown>\n#4 0x55aecc2c27f4 <unknown>\n#5 0x55aecc2a803d <unknown>\n#6 0x55aecc2c030e <unknown>\n#7 0x55aecc2a7de3 <unknown>\n#8 0x55aecc27d2dd <unknown>\n#9 0x55aecc27e34e <unknown>\n#10 0x55aecc4dd3e4 <unknown>\n#11 0x55aecc4e13d7 <unknown>\n#12 0x55aecc4ebb20 <unknown>\n#13 0x55aecc4e2023 <unknown>\n#14 0x55aecc4b01aa <unknown>\n#15 0x55aecc5066b8 <unknown>\n#16 0x55aecc506847 <unknown>\n#17 0x55aecc516243 <unknown>\n#18 0x7fe7bfb9eb43 <unknown>","statusTrace":"self = <test_ask_a_question_pandbox.TestAskQuestionPage object at 0x7f3fce4d5ed0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9de4d1fdc6e7ecf26358b398d44a7725\")>\nopen_and_load_main_page = None\n\n    def test_tc_002_03_09_ask_a_question(self, driver, open_and_load_main_page):\n        ask_a_question_page = AskQuestionPage(driver)\n>       ask_a_question_page.check_header_title(\"ask a question\")\n\ntests/test_ask_a_question_pandbox.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/ask_a_question_page.py:11: in check_header_title\n    displayed_title = self.driver.find_element(*self.ask_a_question_locators.DISPLAYED_TITLE).text\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3fccf5bf10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55aecc506847 \\\\u003Cunknown>\\\\n#17 0x55aecc516243 \\\\u003Cunknown>\\\\n#18 0x7fe7bfb9eb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"h4.headline\"}\nE         (Session info: headless chrome=114.0.5735.198)\nE       Stacktrace:\nE       #0 0x55aecc51d4e3 <unknown>\nE       #1 0x55aecc24cc76 <unknown>\nE       #2 0x55aecc288c96 <unknown>\nE       #3 0x55aecc288dc1 <unknown>\nE       #4 0x55aecc2c27f4 <unknown>\nE       #5 0x55aecc2a803d <unknown>\nE       #6 0x55aecc2c030e <unknown>\nE       #7 0x55aecc2a7de3 <unknown>\nE       #8 0x55aecc27d2dd <unknown>\nE       #9 0x55aecc27e34e <unknown>\nE       #10 0x55aecc4dd3e4 <unknown>\nE       #11 0x55aecc4e13d7 <unknown>\nE       #12 0x55aecc4ebb20 <unknown>\nE       #13 0x55aecc4e2023 <unknown>\nE       #14 0x55aecc4b01aa <unknown>\nE       #15 0x55aecc5066b8 <unknown>\nE       #16 0x55aecc506847 <unknown>\nE       #17 0x55aecc516243 <unknown>\nE       #18 0x7fe7bfb9eb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","steps":[],"attachments":[{"uid":"e625a8a0660b057b","name":"Screenshot","source":"e625a8a0660b057b.png","type":"image/png","size":10941},{"uid":"471ad5490835bad4","name":"HTML source","source":"471ad5490835bad4.html","type":"text/html","size":155},{"uid":"c871ca71939f2ee1","name":"stdout","source":"c871ca71939f2ee1.txt","type":"text/plain","size":35}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"wait::0","time":{"start":1688951471622,"stop":1688951471622,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver::0","time":{"start":1688951471622,"stop":1688951472680,"duration":1058},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_ask_a_question_pandbox"},{"name":"subSuite","value":"TestAskQuestionPage"},{"name":"host","value":"fv-az358-261"},{"name":"thread","value":"2372-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_ask_a_question_pandbox"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":12,"unknown":0,"total":13},"items":[{"uid":"e79cdc86d33077a5","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/42//#testresult/e79cdc86d33077a5","status":"passed","time":{"start":1688864958677,"stop":1688864960116,"duration":1439}},{"uid":"f75dacb462d450a8","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/41//#testresult/f75dacb462d450a8","status":"passed","time":{"start":1688778376875,"stop":1688778379167,"duration":2292}},{"uid":"cf66fcfae7d76433","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/40//#testresult/cf66fcfae7d76433","status":"passed","time":{"start":1688692006592,"stop":1688692007923,"duration":1331}},{"uid":"c0700ba64e7f6358","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/39//#testresult/c0700ba64e7f6358","status":"passed","time":{"start":1688605573085,"stop":1688605574397,"duration":1312}},{"uid":"4089a4094fdd6074","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/38//#testresult/4089a4094fdd6074","status":"passed","time":{"start":1688519263208,"stop":1688519265029,"duration":1821}},{"uid":"f55ce19219166595","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/37//#testresult/f55ce19219166595","status":"passed","time":{"start":1688432806265,"stop":1688432808556,"duration":2291}},{"uid":"130675c251e14b76","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/36//#testresult/130675c251e14b76","status":"passed","time":{"start":1688346328750,"stop":1688346330091,"duration":1341}},{"uid":"73e5043eb5a34be5","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/35//#testresult/73e5043eb5a34be5","status":"passed","time":{"start":1688260039216,"stop":1688260040956,"duration":1740}},{"uid":"183911ee33d4b8d3","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/34//#testresult/183911ee33d4b8d3","status":"passed","time":{"start":1688173812648,"stop":1688173814463,"duration":1815}},{"uid":"9de46ea71a69fabe","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/33//#testresult/9de46ea71a69fabe","status":"passed","time":{"start":1688086921892,"stop":1688086924002,"duration":2110}},{"uid":"efef2cd4789c93fb","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/32//#testresult/efef2cd4789c93fb","status":"passed","time":{"start":1688000625534,"stop":1688000627398,"duration":1864}},{"uid":"7747528858e11415","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/31//#testresult/7747528858e11415","status":"passed","time":{"start":1687914387597,"stop":1687914388960,"duration":1363}}]},"tags":[]},"source":"d2e6f7a30b7cc6e5.json","parameterValues":[]}