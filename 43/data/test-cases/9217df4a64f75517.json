{"uid":"9217df4a64f75517","name":"test_tc_017_04_05_api_key_is_generated","fullName":"tests.test_api_keys_page_ow6.TestApiKey#test_tc_017_04_05_api_key_is_generated","historyId":"e8bcdf7da8cf73351bf95c09cbaae0d2","time":{"start":1688951198930,"stop":1688951199240,"duration":310},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#user_email\"}\n  (Session info: headless chrome=114.0.5735.198)\nStacktrace:\n#0 0x55cb118d34e3 <unknown>\n#1 0x55cb11602c76 <unknown>\n#2 0x55cb1163ec96 <unknown>\n#3 0x55cb1163edc1 <unknown>\n#4 0x55cb116787f4 <unknown>\n#5 0x55cb1165e03d <unknown>\n#6 0x55cb1167630e <unknown>\n#7 0x55cb1165dde3 <unknown>\n#8 0x55cb116332dd <unknown>\n#9 0x55cb1163434e <unknown>\n#10 0x55cb118933e4 <unknown>\n#11 0x55cb118973d7 <unknown>\n#12 0x55cb118a1b20 <unknown>\n#13 0x55cb11898023 <unknown>\n#14 0x55cb118661aa <unknown>\n#15 0x55cb118bc6b8 <unknown>\n#16 0x55cb118bc847 <unknown>\n#17 0x55cb118cc243 <unknown>\n#18 0x7fac3d431b43 <unknown>","statusTrace":"self = <test_api_keys_page_ow6.TestApiKey object at 0x7f3fce4fa080>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e50047242d1387105fdeb83d57a0604\")>\n\n    def test_tc_017_04_05_api_key_is_generated(self, driver):\n        api_keys_page = ApiKeysPage(driver)\n>       api_keys_page.open_api_keys_page()\n\ntests/test_api_keys_page_ow6.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/api_keys_page.py:17: in open_api_keys_page\n    sign_in_page.log_in()\noldTests/test_group_ducktales/pages/sign_in_page.py:9: in log_in\n    self.driver.find_element(*SignInLocator.EMAIL_INPUT).send_keys(sign_in_page_data.USER_EMAIL)\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3fce108d30>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55cb118bc847 \\\\u003Cunknown>\\\\n#17 0x55cb118cc243 \\\\u003Cunknown>\\\\n#18 0x7fac3d431b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#user_email\"}\nE         (Session info: headless chrome=114.0.5735.198)\nE       Stacktrace:\nE       #0 0x55cb118d34e3 <unknown>\nE       #1 0x55cb11602c76 <unknown>\nE       #2 0x55cb1163ec96 <unknown>\nE       #3 0x55cb1163edc1 <unknown>\nE       #4 0x55cb116787f4 <unknown>\nE       #5 0x55cb1165e03d <unknown>\nE       #6 0x55cb1167630e <unknown>\nE       #7 0x55cb1165dde3 <unknown>\nE       #8 0x55cb116332dd <unknown>\nE       #9 0x55cb1163434e <unknown>\nE       #10 0x55cb118933e4 <unknown>\nE       #11 0x55cb118973d7 <unknown>\nE       #12 0x55cb118a1b20 <unknown>\nE       #13 0x55cb11898023 <unknown>\nE       #14 0x55cb118661aa <unknown>\nE       #15 0x55cb118bc6b8 <unknown>\nE       #16 0x55cb118bc847 <unknown>\nE       #17 0x55cb118cc243 <unknown>\nE       #18 0x7fac3d431b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1688951198174,"stop":1688951198929,"duration":755},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#user_email\"}\n  (Session info: headless chrome=114.0.5735.198)\nStacktrace:\n#0 0x55cb118d34e3 <unknown>\n#1 0x55cb11602c76 <unknown>\n#2 0x55cb1163ec96 <unknown>\n#3 0x55cb1163edc1 <unknown>\n#4 0x55cb116787f4 <unknown>\n#5 0x55cb1165e03d <unknown>\n#6 0x55cb1167630e <unknown>\n#7 0x55cb1165dde3 <unknown>\n#8 0x55cb116332dd <unknown>\n#9 0x55cb1163434e <unknown>\n#10 0x55cb118933e4 <unknown>\n#11 0x55cb118973d7 <unknown>\n#12 0x55cb118a1b20 <unknown>\n#13 0x55cb11898023 <unknown>\n#14 0x55cb118661aa <unknown>\n#15 0x55cb118bc6b8 <unknown>\n#16 0x55cb118bc847 <unknown>\n#17 0x55cb118cc243 <unknown>\n#18 0x7fac3d431b43 <unknown>","statusTrace":"self = <test_api_keys_page_ow6.TestApiKey object at 0x7f3fce4fa080>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e50047242d1387105fdeb83d57a0604\")>\n\n    def test_tc_017_04_05_api_key_is_generated(self, driver):\n        api_keys_page = ApiKeysPage(driver)\n>       api_keys_page.open_api_keys_page()\n\ntests/test_api_keys_page_ow6.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/api_keys_page.py:17: in open_api_keys_page\n    sign_in_page.log_in()\noldTests/test_group_ducktales/pages/sign_in_page.py:9: in log_in\n    self.driver.find_element(*SignInLocator.EMAIL_INPUT).send_keys(sign_in_page_data.USER_EMAIL)\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3fce108d30>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55cb118bc847 \\\\u003Cunknown>\\\\n#17 0x55cb118cc243 \\\\u003Cunknown>\\\\n#18 0x7fac3d431b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#user_email\"}\nE         (Session info: headless chrome=114.0.5735.198)\nE       Stacktrace:\nE       #0 0x55cb118d34e3 <unknown>\nE       #1 0x55cb11602c76 <unknown>\nE       #2 0x55cb1163ec96 <unknown>\nE       #3 0x55cb1163edc1 <unknown>\nE       #4 0x55cb116787f4 <unknown>\nE       #5 0x55cb1165e03d <unknown>\nE       #6 0x55cb1167630e <unknown>\nE       #7 0x55cb1165dde3 <unknown>\nE       #8 0x55cb116332dd <unknown>\nE       #9 0x55cb1163434e <unknown>\nE       #10 0x55cb118933e4 <unknown>\nE       #11 0x55cb118973d7 <unknown>\nE       #12 0x55cb118a1b20 <unknown>\nE       #13 0x55cb11898023 <unknown>\nE       #14 0x55cb118661aa <unknown>\nE       #15 0x55cb118bc6b8 <unknown>\nE       #16 0x55cb118bc847 <unknown>\nE       #17 0x55cb118cc243 <unknown>\nE       #18 0x7fac3d431b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","steps":[],"attachments":[{"uid":"f02ded6dda597d5","name":"Screenshot","source":"f02ded6dda597d5.png","type":"image/png","size":13816},{"uid":"6660f9ae81a08b3a","name":"HTML source","source":"6660f9ae81a08b3a.html","type":"text/html","size":155},{"uid":"d6a76665cfc25809","name":"stdout","source":"d6a76665cfc25809.txt","type":"text/plain","size":35}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1688951199367,"stop":1688951199421,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_api_keys_page_ow6"},{"name":"subSuite","value":"TestApiKey"},{"name":"host","value":"fv-az358-261"},{"name":"thread","value":"2372-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_api_keys_page_ow6"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":1,"skipped":0,"passed":10,"unknown":0,"total":13},"items":[{"uid":"5f6da9a69a3ce5b0","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/42//#testresult/5f6da9a69a3ce5b0","status":"passed","time":{"start":1688864910963,"stop":1688864914457,"duration":3494}},{"uid":"94477d59a38258a9","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/41//#testresult/94477d59a38258a9","status":"passed","time":{"start":1688778314473,"stop":1688778319774,"duration":5301}},{"uid":"83d64c7474c87f94","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/40//#testresult/83d64c7474c87f94","status":"passed","time":{"start":1688691960570,"stop":1688691963820,"duration":3250}},{"uid":"2d1c3f107f6c5de0","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/39//#testresult/2d1c3f107f6c5de0","status":"passed","time":{"start":1688605526937,"stop":1688605530476,"duration":3539}},{"uid":"73dda5d34f0e81e9","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/38//#testresult/73dda5d34f0e81e9","status":"passed","time":{"start":1688519210610,"stop":1688519214794,"duration":4184}},{"uid":"8316d826af470c3b","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/37//#testresult/8316d826af470c3b","status":"passed","time":{"start":1688432729881,"stop":1688432739313,"duration":9432}},{"uid":"20747ebff398dd9f","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/36//#testresult/20747ebff398dd9f","status":"failed","statusDetails":"AssertionError: The new API key does not generated","time":{"start":1688346276055,"stop":1688346279969,"duration":3914}},{"uid":"3e642bed68a51bcb","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/35//#testresult/3e642bed68a51bcb","status":"passed","time":{"start":1688259980916,"stop":1688259987105,"duration":6189}},{"uid":"ccaf436ba670f847","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/34//#testresult/ccaf436ba670f847","status":"failed","statusDetails":"AssertionError: The new API key does not generated","time":{"start":1688173751243,"stop":1688173756092,"duration":4849}},{"uid":"cf19306baad057e","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/33//#testresult/cf19306baad057e","status":"passed","time":{"start":1688086855237,"stop":1688086862812,"duration":7575}},{"uid":"f7b386288171f0ba","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/32//#testresult/f7b386288171f0ba","status":"passed","time":{"start":1688000561682,"stop":1688000568100,"duration":6418}},{"uid":"b3903a4b6f7bdbe7","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/31//#testresult/b3903a4b6f7bdbe7","status":"passed","time":{"start":1687914332231,"stop":1687914336824,"duration":4593}}]},"tags":[]},"source":"9217df4a64f75517.json","parameterValues":[]}