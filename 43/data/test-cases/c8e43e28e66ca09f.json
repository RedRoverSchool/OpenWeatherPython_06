{"uid":"c8e43e28e66ca09f","name":"test_tc_017_05_03_verify_notice_message_about_API_key_deletion","fullName":"tests.test_api_keys_page_ow6.TestApiKey#test_tc_017_05_03_verify_notice_message_about_API_key_deletion","historyId":"e1adf1d7f3846959bc6552d82d00d91d","time":{"start":1688951322707,"stop":1688951383021,"duration":60314},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#user_email\"}\n  (Session info: headless chrome=114.0.5735.198)\nStacktrace:\n#0 0x5597d3f684e3 <unknown>\n#1 0x5597d3c97c76 <unknown>\n#2 0x5597d3cd3c96 <unknown>\n#3 0x5597d3cd3dc1 <unknown>\n#4 0x5597d3d0d7f4 <unknown>\n#5 0x5597d3cf303d <unknown>\n#6 0x5597d3d0b30e <unknown>\n#7 0x5597d3cf2de3 <unknown>\n#8 0x5597d3cc82dd <unknown>\n#9 0x5597d3cc934e <unknown>\n#10 0x5597d3f283e4 <unknown>\n#11 0x5597d3f2c3d7 <unknown>\n#12 0x5597d3f36b20 <unknown>\n#13 0x5597d3f2d023 <unknown>\n#14 0x5597d3efb1aa <unknown>\n#15 0x5597d3f516b8 <unknown>\n#16 0x5597d3f51847 <unknown>\n#17 0x5597d3f61243 <unknown>\n#18 0x7ff9f4e1fb43 <unknown>","statusTrace":"self = <test_api_keys_page_ow6.TestApiKey object at 0x7f3fce4fa440>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"aca7fde814b950fdb3215222ff9146e0\")>\n\n    def test_tc_017_05_03_verify_notice_message_about_API_key_deletion(self, driver):\n        api_key_name = ''.join(random.choices(string.ascii_letters, k=8))\n        api_keys_page = ApiKeysPage(driver)\n>       api_keys_page.open_api_keys_page()\n\ntests/test_api_keys_page_ow6.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/api_keys_page.py:17: in open_api_keys_page\n    sign_in_page.log_in()\noldTests/test_group_ducktales/pages/sign_in_page.py:9: in log_in\n    self.driver.find_element(*SignInLocator.EMAIL_INPUT).send_keys(sign_in_page_data.USER_EMAIL)\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3fccef0f70>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x5597d3f51847 \\\\u003Cunknown>\\\\n#17 0x5597d3f61243 \\\\u003Cunknown>\\\\n#18 0x7ff9f4e1fb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#user_email\"}\nE         (Session info: headless chrome=114.0.5735.198)\nE       Stacktrace:\nE       #0 0x5597d3f684e3 <unknown>\nE       #1 0x5597d3c97c76 <unknown>\nE       #2 0x5597d3cd3c96 <unknown>\nE       #3 0x5597d3cd3dc1 <unknown>\nE       #4 0x5597d3d0d7f4 <unknown>\nE       #5 0x5597d3cf303d <unknown>\nE       #6 0x5597d3d0b30e <unknown>\nE       #7 0x5597d3cf2de3 <unknown>\nE       #8 0x5597d3cc82dd <unknown>\nE       #9 0x5597d3cc934e <unknown>\nE       #10 0x5597d3f283e4 <unknown>\nE       #11 0x5597d3f2c3d7 <unknown>\nE       #12 0x5597d3f36b20 <unknown>\nE       #13 0x5597d3f2d023 <unknown>\nE       #14 0x5597d3efb1aa <unknown>\nE       #15 0x5597d3f516b8 <unknown>\nE       #16 0x5597d3f51847 <unknown>\nE       #17 0x5597d3f61243 <unknown>\nE       #18 0x7ff9f4e1fb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1688951321953,"stop":1688951322707,"duration":754},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#user_email\"}\n  (Session info: headless chrome=114.0.5735.198)\nStacktrace:\n#0 0x5597d3f684e3 <unknown>\n#1 0x5597d3c97c76 <unknown>\n#2 0x5597d3cd3c96 <unknown>\n#3 0x5597d3cd3dc1 <unknown>\n#4 0x5597d3d0d7f4 <unknown>\n#5 0x5597d3cf303d <unknown>\n#6 0x5597d3d0b30e <unknown>\n#7 0x5597d3cf2de3 <unknown>\n#8 0x5597d3cc82dd <unknown>\n#9 0x5597d3cc934e <unknown>\n#10 0x5597d3f283e4 <unknown>\n#11 0x5597d3f2c3d7 <unknown>\n#12 0x5597d3f36b20 <unknown>\n#13 0x5597d3f2d023 <unknown>\n#14 0x5597d3efb1aa <unknown>\n#15 0x5597d3f516b8 <unknown>\n#16 0x5597d3f51847 <unknown>\n#17 0x5597d3f61243 <unknown>\n#18 0x7ff9f4e1fb43 <unknown>","statusTrace":"self = <test_api_keys_page_ow6.TestApiKey object at 0x7f3fce4fa440>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"aca7fde814b950fdb3215222ff9146e0\")>\n\n    def test_tc_017_05_03_verify_notice_message_about_API_key_deletion(self, driver):\n        api_key_name = ''.join(random.choices(string.ascii_letters, k=8))\n        api_keys_page = ApiKeysPage(driver)\n>       api_keys_page.open_api_keys_page()\n\ntests/test_api_keys_page_ow6.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/api_keys_page.py:17: in open_api_keys_page\n    sign_in_page.log_in()\noldTests/test_group_ducktales/pages/sign_in_page.py:9: in log_in\n    self.driver.find_element(*SignInLocator.EMAIL_INPUT).send_keys(sign_in_page_data.USER_EMAIL)\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3fccef0f70>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x5597d3f51847 \\\\u003Cunknown>\\\\n#17 0x5597d3f61243 \\\\u003Cunknown>\\\\n#18 0x7ff9f4e1fb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#user_email\"}\nE         (Session info: headless chrome=114.0.5735.198)\nE       Stacktrace:\nE       #0 0x5597d3f684e3 <unknown>\nE       #1 0x5597d3c97c76 <unknown>\nE       #2 0x5597d3cd3c96 <unknown>\nE       #3 0x5597d3cd3dc1 <unknown>\nE       #4 0x5597d3d0d7f4 <unknown>\nE       #5 0x5597d3cf303d <unknown>\nE       #6 0x5597d3d0b30e <unknown>\nE       #7 0x5597d3cf2de3 <unknown>\nE       #8 0x5597d3cc82dd <unknown>\nE       #9 0x5597d3cc934e <unknown>\nE       #10 0x5597d3f283e4 <unknown>\nE       #11 0x5597d3f2c3d7 <unknown>\nE       #12 0x5597d3f36b20 <unknown>\nE       #13 0x5597d3f2d023 <unknown>\nE       #14 0x5597d3efb1aa <unknown>\nE       #15 0x5597d3f516b8 <unknown>\nE       #16 0x5597d3f51847 <unknown>\nE       #17 0x5597d3f61243 <unknown>\nE       #18 0x7ff9f4e1fb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","steps":[],"attachments":[{"uid":"3cfe496df39e1bd1","name":"Screenshot","source":"3cfe496df39e1bd1.png","type":"image/png","size":13816},{"uid":"302a0012075aa0e5","name":"HTML source","source":"302a0012075aa0e5.html","type":"text/html","size":155},{"uid":"91aaaddb9f72e160","name":"stdout","source":"91aaaddb9f72e160.txt","type":"text/plain","size":35}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1688951383143,"stop":1688951383197,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_api_keys_page_ow6"},{"name":"subSuite","value":"TestApiKey"},{"name":"host","value":"fv-az358-261"},{"name":"thread","value":"2372-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_api_keys_page_ow6"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":12,"unknown":0,"total":13},"items":[{"uid":"d7958c86873b75c9","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/42//#testresult/d7958c86873b75c9","status":"passed","time":{"start":1688864924146,"stop":1688864927483,"duration":3337}},{"uid":"8b657ed70b1e1f97","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/41//#testresult/8b657ed70b1e1f97","status":"passed","time":{"start":1688778333259,"stop":1688778339784,"duration":6525}},{"uid":"aa42a63318028418","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/40//#testresult/aa42a63318028418","status":"passed","time":{"start":1688691972834,"stop":1688691975968,"duration":3134}},{"uid":"64af81da35cb5756","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/39//#testresult/64af81da35cb5756","status":"passed","time":{"start":1688605539763,"stop":1688605542986,"duration":3223}},{"uid":"f7960f55c1b2afef","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/38//#testresult/f7960f55c1b2afef","status":"passed","time":{"start":1688519225625,"stop":1688519229756,"duration":4131}},{"uid":"8fe77db4c373839f","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/37//#testresult/8fe77db4c373839f","status":"passed","time":{"start":1688432757927,"stop":1688432765434,"duration":7507}},{"uid":"f248c6ed5e2ae3db","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/36//#testresult/f248c6ed5e2ae3db","status":"passed","time":{"start":1688346292526,"stop":1688346296814,"duration":4288}},{"uid":"464192da576da834","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/35//#testresult/464192da576da834","status":"passed","time":{"start":1688260000758,"stop":1688260005541,"duration":4783}},{"uid":"5a91a0374d973813","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/34//#testresult/5a91a0374d973813","status":"passed","time":{"start":1688173771005,"stop":1688173776336,"duration":5331}},{"uid":"feadc9fc58e2cddd","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/33//#testresult/feadc9fc58e2cddd","status":"passed","time":{"start":1688086878159,"stop":1688086884146,"duration":5987}},{"uid":"d382684ed604e41c","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/32//#testresult/d382684ed604e41c","status":"passed","time":{"start":1688000582608,"stop":1688000587902,"duration":5294}},{"uid":"a2d39dfaa2642170","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/31//#testresult/a2d39dfaa2642170","status":"passed","time":{"start":1687914349010,"stop":1687914352878,"duration":3868}}]},"tags":[]},"source":"c8e43e28e66ca09f.json","parameterValues":[]}