{"uid":"db06febf70919e7a","name":"test_tc_017_04_01_module_create_api_key_is_visible","fullName":"tests.test_api_keys_page_ow6.TestApiKey#test_tc_017_04_01_module_create_api_key_is_visible","historyId":"faedbaf85702b5310e53952c815828ba","time":{"start":1688951073947,"stop":1688951134257,"duration":60310},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#user_email\"}\n  (Session info: headless chrome=114.0.5735.198)\nStacktrace:\n#0 0x55a4084dc4e3 <unknown>\n#1 0x55a40820bc76 <unknown>\n#2 0x55a408247c96 <unknown>\n#3 0x55a408247dc1 <unknown>\n#4 0x55a4082817f4 <unknown>\n#5 0x55a40826703d <unknown>\n#6 0x55a40827f30e <unknown>\n#7 0x55a408266de3 <unknown>\n#8 0x55a40823c2dd <unknown>\n#9 0x55a40823d34e <unknown>\n#10 0x55a40849c3e4 <unknown>\n#11 0x55a4084a03d7 <unknown>\n#12 0x55a4084aab20 <unknown>\n#13 0x55a4084a1023 <unknown>\n#14 0x55a40846f1aa <unknown>\n#15 0x55a4084c56b8 <unknown>\n#16 0x55a4084c5847 <unknown>\n#17 0x55a4084d5243 <unknown>\n#18 0x7fbb15705b43 <unknown>","statusTrace":"self = <test_api_keys_page_ow6.TestApiKey object at 0x7f3fce4f9d80>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0df072bda73c0f4a3b6a61447341c05d\")>\n\n    def test_tc_017_04_01_module_create_api_key_is_visible(self, driver):\n        api_keys_page = ApiKeysPage(driver)\n>       api_keys_page.open_api_keys_page()\n\ntests/test_api_keys_page_ow6.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/api_keys_page.py:17: in open_api_keys_page\n    sign_in_page.log_in()\noldTests/test_group_ducktales/pages/sign_in_page.py:9: in log_in\n    self.driver.find_element(*SignInLocator.EMAIL_INPUT).send_keys(sign_in_page_data.USER_EMAIL)\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3fce33f580>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55a4084c5847 \\\\u003Cunknown>\\\\n#17 0x55a4084d5243 \\\\u003Cunknown>\\\\n#18 0x7fbb15705b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#user_email\"}\nE         (Session info: headless chrome=114.0.5735.198)\nE       Stacktrace:\nE       #0 0x55a4084dc4e3 <unknown>\nE       #1 0x55a40820bc76 <unknown>\nE       #2 0x55a408247c96 <unknown>\nE       #3 0x55a408247dc1 <unknown>\nE       #4 0x55a4082817f4 <unknown>\nE       #5 0x55a40826703d <unknown>\nE       #6 0x55a40827f30e <unknown>\nE       #7 0x55a408266de3 <unknown>\nE       #8 0x55a40823c2dd <unknown>\nE       #9 0x55a40823d34e <unknown>\nE       #10 0x55a40849c3e4 <unknown>\nE       #11 0x55a4084a03d7 <unknown>\nE       #12 0x55a4084aab20 <unknown>\nE       #13 0x55a4084a1023 <unknown>\nE       #14 0x55a40846f1aa <unknown>\nE       #15 0x55a4084c56b8 <unknown>\nE       #16 0x55a4084c5847 <unknown>\nE       #17 0x55a4084d5243 <unknown>\nE       #18 0x7fbb15705b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1688951073191,"stop":1688951073946,"duration":755},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#user_email\"}\n  (Session info: headless chrome=114.0.5735.198)\nStacktrace:\n#0 0x55a4084dc4e3 <unknown>\n#1 0x55a40820bc76 <unknown>\n#2 0x55a408247c96 <unknown>\n#3 0x55a408247dc1 <unknown>\n#4 0x55a4082817f4 <unknown>\n#5 0x55a40826703d <unknown>\n#6 0x55a40827f30e <unknown>\n#7 0x55a408266de3 <unknown>\n#8 0x55a40823c2dd <unknown>\n#9 0x55a40823d34e <unknown>\n#10 0x55a40849c3e4 <unknown>\n#11 0x55a4084a03d7 <unknown>\n#12 0x55a4084aab20 <unknown>\n#13 0x55a4084a1023 <unknown>\n#14 0x55a40846f1aa <unknown>\n#15 0x55a4084c56b8 <unknown>\n#16 0x55a4084c5847 <unknown>\n#17 0x55a4084d5243 <unknown>\n#18 0x7fbb15705b43 <unknown>","statusTrace":"self = <test_api_keys_page_ow6.TestApiKey object at 0x7f3fce4f9d80>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0df072bda73c0f4a3b6a61447341c05d\")>\n\n    def test_tc_017_04_01_module_create_api_key_is_visible(self, driver):\n        api_keys_page = ApiKeysPage(driver)\n>       api_keys_page.open_api_keys_page()\n\ntests/test_api_keys_page_ow6.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/api_keys_page.py:17: in open_api_keys_page\n    sign_in_page.log_in()\noldTests/test_group_ducktales/pages/sign_in_page.py:9: in log_in\n    self.driver.find_element(*SignInLocator.EMAIL_INPUT).send_keys(sign_in_page_data.USER_EMAIL)\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3fce33f580>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55a4084c5847 \\\\u003Cunknown>\\\\n#17 0x55a4084d5243 \\\\u003Cunknown>\\\\n#18 0x7fbb15705b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#user_email\"}\nE         (Session info: headless chrome=114.0.5735.198)\nE       Stacktrace:\nE       #0 0x55a4084dc4e3 <unknown>\nE       #1 0x55a40820bc76 <unknown>\nE       #2 0x55a408247c96 <unknown>\nE       #3 0x55a408247dc1 <unknown>\nE       #4 0x55a4082817f4 <unknown>\nE       #5 0x55a40826703d <unknown>\nE       #6 0x55a40827f30e <unknown>\nE       #7 0x55a408266de3 <unknown>\nE       #8 0x55a40823c2dd <unknown>\nE       #9 0x55a40823d34e <unknown>\nE       #10 0x55a40849c3e4 <unknown>\nE       #11 0x55a4084a03d7 <unknown>\nE       #12 0x55a4084aab20 <unknown>\nE       #13 0x55a4084a1023 <unknown>\nE       #14 0x55a40846f1aa <unknown>\nE       #15 0x55a4084c56b8 <unknown>\nE       #16 0x55a4084c5847 <unknown>\nE       #17 0x55a4084d5243 <unknown>\nE       #18 0x7fbb15705b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","steps":[],"attachments":[{"uid":"7b94831992f4fef8","name":"Screenshot","source":"7b94831992f4fef8.png","type":"image/png","size":13816},{"uid":"e0453a86f3825b74","name":"HTML source","source":"e0453a86f3825b74.html","type":"text/html","size":155},{"uid":"e54c33245c5384bf","name":"stdout","source":"e54c33245c5384bf.txt","type":"text/plain","size":35}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1688951134392,"stop":1688951134446,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_api_keys_page_ow6"},{"name":"subSuite","value":"TestApiKey"},{"name":"host","value":"fv-az358-261"},{"name":"thread","value":"2372-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_api_keys_page_ow6"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":12,"unknown":0,"total":13},"items":[{"uid":"57f72c6445174d84","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/42//#testresult/57f72c6445174d84","status":"passed","time":{"start":1688864897458,"stop":1688864899964,"duration":2506}},{"uid":"5f85f3c6dac2a504","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/41//#testresult/5f85f3c6dac2a504","status":"passed","time":{"start":1688778294562,"stop":1688778298676,"duration":4114}},{"uid":"a588aec4504a20ea","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/40//#testresult/a588aec4504a20ea","status":"passed","time":{"start":1688691947743,"stop":1688691950127,"duration":2384}},{"uid":"f5d51ab940f5bdb0","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/39//#testresult/f5d51ab940f5bdb0","status":"passed","time":{"start":1688605514470,"stop":1688605516764,"duration":2294}},{"uid":"931e7bd5d94f5d7","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/38//#testresult/931e7bd5d94f5d7","status":"passed","time":{"start":1688519074992,"stop":1688519198173,"duration":123181}},{"uid":"d19aa30b56383639","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/37//#testresult/d19aa30b56383639","status":"passed","time":{"start":1688432709399,"stop":1688432713477,"duration":4078}},{"uid":"96adf11ccc0a5f32","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/36//#testresult/96adf11ccc0a5f32","status":"passed","time":{"start":1688346262919,"stop":1688346265340,"duration":2421}},{"uid":"23e6ea70a2ff73e3","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/35//#testresult/23e6ea70a2ff73e3","status":"passed","time":{"start":1688259964911,"stop":1688259968139,"duration":3228}},{"uid":"4bfcd909dc6cfefe","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/34//#testresult/4bfcd909dc6cfefe","status":"passed","time":{"start":1688173734755,"stop":1688173737984,"duration":3229}},{"uid":"f9cecf478680ec43","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/33//#testresult/f9cecf478680ec43","status":"passed","time":{"start":1688086836098,"stop":1688086840151,"duration":4053}},{"uid":"fbee268859ce465","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/32//#testresult/fbee268859ce465","status":"passed","time":{"start":1688000540996,"stop":1688000544405,"duration":3409}},{"uid":"243038addd77402f","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/31//#testresult/243038addd77402f","status":"passed","time":{"start":1687914318899,"stop":1687914321409,"duration":2510}}]},"tags":[]},"source":"db06febf70919e7a.json","parameterValues":[]}