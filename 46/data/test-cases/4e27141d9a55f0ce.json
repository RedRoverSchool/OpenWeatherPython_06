{"uid":"4e27141d9a55f0ce","name":"test_TC_007_02_06_verify_visibility_clickability_satellite_btn","fullName":"tests.test_marketplace_page_ow6.TestMarketplacePage#test_TC_007_02_06_verify_visibility_clickability_satellite_btn","historyId":"d3267a1b424456cbbd4567a39c7b76f9","time":{"start":1689213304109,"stop":1689213306087,"duration":1978},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h5/a[contains(text(), 'History Bulk')]\"}\n  (Session info: headless chrome=114.0.5735.198)\nStacktrace:\n#0 0x558fa4e264e3 <unknown>\n#1 0x558fa4b55c76 <unknown>\n#2 0x558fa4b91c96 <unknown>\n#3 0x558fa4b91dc1 <unknown>\n#4 0x558fa4bcb7f4 <unknown>\n#5 0x558fa4bb103d <unknown>\n#6 0x558fa4bc930e <unknown>\n#7 0x558fa4bb0de3 <unknown>\n#8 0x558fa4b862dd <unknown>\n#9 0x558fa4b8734e <unknown>\n#10 0x558fa4de63e4 <unknown>\n#11 0x558fa4dea3d7 <unknown>\n#12 0x558fa4df4b20 <unknown>\n#13 0x558fa4deb023 <unknown>\n#14 0x558fa4db91aa <unknown>\n#15 0x558fa4e0f6b8 <unknown>\n#16 0x558fa4e0f847 <unknown>\n#17 0x558fa4e1f243 <unknown>\n#18 0x7f3ee9a45b43 <unknown>","statusTrace":"self = <test_marketplace_page_ow6.TestMarketplacePage object at 0x7f87dcc2a7a0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"da6ec5b597de5cc408a125e340df749a\")>\n\n    def test_TC_007_02_06_verify_visibility_clickability_satellite_btn(self, driver):\n        page = MarketplacePage(driver)\n>       page.verify_visibility_clickability_satellite_btn()\n\ntests/test_marketplace_page_ow6.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/marketplace_page.py:123: in verify_visibility_clickability_satellite_btn\n    self.driver.find_element(*M.HISTORY_BULK_TITLE).click()\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f87dca09930>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x558fa4e0f847 \\\\u003Cunknown>\\\\n#17 0x558fa4e1f243 \\\\u003Cunknown>\\\\n#18 0x7f3ee9a45b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h5/a[contains(text(), 'History Bulk')]\"}\nE         (Session info: headless chrome=114.0.5735.198)\nE       Stacktrace:\nE       #0 0x558fa4e264e3 <unknown>\nE       #1 0x558fa4b55c76 <unknown>\nE       #2 0x558fa4b91c96 <unknown>\nE       #3 0x558fa4b91dc1 <unknown>\nE       #4 0x558fa4bcb7f4 <unknown>\nE       #5 0x558fa4bb103d <unknown>\nE       #6 0x558fa4bc930e <unknown>\nE       #7 0x558fa4bb0de3 <unknown>\nE       #8 0x558fa4b862dd <unknown>\nE       #9 0x558fa4b8734e <unknown>\nE       #10 0x558fa4de63e4 <unknown>\nE       #11 0x558fa4dea3d7 <unknown>\nE       #12 0x558fa4df4b20 <unknown>\nE       #13 0x558fa4deb023 <unknown>\nE       #14 0x558fa4db91aa <unknown>\nE       #15 0x558fa4e0f6b8 <unknown>\nE       #16 0x558fa4e0f847 <unknown>\nE       #17 0x558fa4e1f243 <unknown>\nE       #18 0x7f3ee9a45b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1689213303295,"stop":1689213304108,"duration":813},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h5/a[contains(text(), 'History Bulk')]\"}\n  (Session info: headless chrome=114.0.5735.198)\nStacktrace:\n#0 0x558fa4e264e3 <unknown>\n#1 0x558fa4b55c76 <unknown>\n#2 0x558fa4b91c96 <unknown>\n#3 0x558fa4b91dc1 <unknown>\n#4 0x558fa4bcb7f4 <unknown>\n#5 0x558fa4bb103d <unknown>\n#6 0x558fa4bc930e <unknown>\n#7 0x558fa4bb0de3 <unknown>\n#8 0x558fa4b862dd <unknown>\n#9 0x558fa4b8734e <unknown>\n#10 0x558fa4de63e4 <unknown>\n#11 0x558fa4dea3d7 <unknown>\n#12 0x558fa4df4b20 <unknown>\n#13 0x558fa4deb023 <unknown>\n#14 0x558fa4db91aa <unknown>\n#15 0x558fa4e0f6b8 <unknown>\n#16 0x558fa4e0f847 <unknown>\n#17 0x558fa4e1f243 <unknown>\n#18 0x7f3ee9a45b43 <unknown>","statusTrace":"self = <test_marketplace_page_ow6.TestMarketplacePage object at 0x7f87dcc2a7a0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"da6ec5b597de5cc408a125e340df749a\")>\n\n    def test_TC_007_02_06_verify_visibility_clickability_satellite_btn(self, driver):\n        page = MarketplacePage(driver)\n>       page.verify_visibility_clickability_satellite_btn()\n\ntests/test_marketplace_page_ow6.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/marketplace_page.py:123: in verify_visibility_clickability_satellite_btn\n    self.driver.find_element(*M.HISTORY_BULK_TITLE).click()\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f87dca09930>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x558fa4e0f847 \\\\u003Cunknown>\\\\n#17 0x558fa4e1f243 \\\\u003Cunknown>\\\\n#18 0x7f3ee9a45b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h5/a[contains(text(), 'History Bulk')]\"}\nE         (Session info: headless chrome=114.0.5735.198)\nE       Stacktrace:\nE       #0 0x558fa4e264e3 <unknown>\nE       #1 0x558fa4b55c76 <unknown>\nE       #2 0x558fa4b91c96 <unknown>\nE       #3 0x558fa4b91dc1 <unknown>\nE       #4 0x558fa4bcb7f4 <unknown>\nE       #5 0x558fa4bb103d <unknown>\nE       #6 0x558fa4bc930e <unknown>\nE       #7 0x558fa4bb0de3 <unknown>\nE       #8 0x558fa4b862dd <unknown>\nE       #9 0x558fa4b8734e <unknown>\nE       #10 0x558fa4de63e4 <unknown>\nE       #11 0x558fa4dea3d7 <unknown>\nE       #12 0x558fa4df4b20 <unknown>\nE       #13 0x558fa4deb023 <unknown>\nE       #14 0x558fa4db91aa <unknown>\nE       #15 0x558fa4e0f6b8 <unknown>\nE       #16 0x558fa4e0f847 <unknown>\nE       #17 0x558fa4e1f243 <unknown>\nE       #18 0x7f3ee9a45b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","steps":[],"attachments":[{"uid":"4ca10b01051e32ca","name":"Screenshot","source":"4ca10b01051e32ca.png","type":"image/png","size":19936},{"uid":"f4c1f31351b76a23","name":"HTML source","source":"f4c1f31351b76a23.html","type":"text/html","size":486437},{"uid":"2be373af3a303b89","name":"stdout","source":"2be373af3a303b89.txt","type":"text/plain","size":35}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1689213306276,"stop":1689213306336,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_marketplace_page_ow6"},{"name":"subSuite","value":"TestMarketplacePage"},{"name":"host","value":"fv-az613-925"},{"name":"thread","value":"2354-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_marketplace_page_ow6"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":15,"unknown":0,"total":16},"items":[{"uid":"3e421370534109ad","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/45//#testresult/3e421370534109ad","status":"passed","time":{"start":1689126874869,"stop":1689126878004,"duration":3135}},{"uid":"a37b040b3ec1208","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/44//#testresult/a37b040b3ec1208","status":"passed","time":{"start":1689040086429,"stop":1689040089316,"duration":2887}},{"uid":"34729505b619da25","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/43//#testresult/34729505b619da25","status":"passed","time":{"start":1688954396430,"stop":1688954399191,"duration":2761}},{"uid":"280d45f579152447","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/42//#testresult/280d45f579152447","status":"passed","time":{"start":1688867858848,"stop":1688867861783,"duration":2935}},{"uid":"7e5cbebd7c8584f1","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/41//#testresult/7e5cbebd7c8584f1","status":"passed","time":{"start":1688781549195,"stop":1688781552951,"duration":3756}},{"uid":"1e52feda766ca077","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/40//#testresult/1e52feda766ca077","status":"passed","time":{"start":1688694619167,"stop":1688694621897,"duration":2730}},{"uid":"a82a957d2072660c","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/39//#testresult/a82a957d2072660c","status":"passed","time":{"start":1688608014411,"stop":1688608017117,"duration":2706}},{"uid":"63e4ea2d23b96c9d","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/38//#testresult/63e4ea2d23b96c9d","status":"passed","time":{"start":1688521712117,"stop":1688521715232,"duration":3115}},{"uid":"9eba55e68cc5f922","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/37//#testresult/9eba55e68cc5f922","status":"passed","time":{"start":1688435226417,"stop":1688435229849,"duration":3432}},{"uid":"9250b4a214702f2d","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/36//#testresult/9250b4a214702f2d","status":"passed","time":{"start":1688348372291,"stop":1688348375036,"duration":2745}},{"uid":"ae59bb49dd2d895a","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/35//#testresult/ae59bb49dd2d895a","status":"passed","time":{"start":1688262328807,"stop":1688262332838,"duration":4031}},{"uid":"a0876cd807c08b8b","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/34//#testresult/a0876cd807c08b8b","status":"passed","time":{"start":1688175578473,"stop":1688175581869,"duration":3396}},{"uid":"ba82ebbebb090117","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/33//#testresult/ba82ebbebb090117","status":"passed","time":{"start":1688088322954,"stop":1688088327537,"duration":4583}},{"uid":"fd556cbce95c2342","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/32//#testresult/fd556cbce95c2342","status":"passed","time":{"start":1688001533101,"stop":1688001536432,"duration":3331}},{"uid":"5dc89833b49ad607","reportUrl":"https://RedRoverSchool.github.io/OpenWeatherPython_06/31//#testresult/5dc89833b49ad607","status":"passed","time":{"start":1687915215269,"stop":1687915218770,"duration":3501}}]},"tags":[]},"source":"4e27141d9a55f0ce.json","parameterValues":[]}